1. Оценка ассимптотики 
	1.1 метод update_level
		при добавлении элемента в пустой список - O(1)
		при добавлении элемента в непустой список в среднем O(n), так как происходит один проход по элементам для того, чтобы узнать, нет ли в имеющемся списке уровня с равным level_price
		при удалении уровня с volume=0 в среднем O(2n) или O(n) так как происходит два прохода по элементам, сначала для нахождения уровня с таким же level_price, а затем для того,чтобы удалить уровень с этим же level_price.
		при изменении значения в уровне просходит два прохода по элементам:сначала для того, чтобы найти уровень с таким же level_price, а затем, чтобы найти индекс этого уровня в листе. По индексу уже происходит замена (O(1)) - поэтому в среднем O(2n), или, сокращая константу, O(n)
	
	1.2 метод get_best_bbo
		функция max в питоне имеет сложность в среднем O(n)
		В худшем случае я использую ее 4 раза, что делает сложность равной O(4*n), и, избавляясь от постоянного множителя, получаем O(n)
   
	1.3 метод get_levels 
		функция sort в среднем имеет сложность O(n*log(n))
2. Оценка затрат по памяти
	2.1 метод update_level
		при добавлении элемента в непустой список, удалении уровня и изменении значения в среднем сложность линейная O(n). Память будет расходоваться на хранение кортежей, содержащих флоаты.
	
	2.2. метод get_best_bbo
		на то, чтобы хранить bests всегда будет требоваться одинаковое количество памяти, так как по сути это кортеж из 4 элементов. Затраты по памяти O(1)
	2.3. метод get_levels
		метод sort требует log(n) памяти
		